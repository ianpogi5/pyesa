name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials from Production Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install dependencies
        run: npm install

      # - name: Run lint
      #   run: npm run lint

      - name: Run build
        run: npm run build

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize
        id: init
        working-directory: ./infra
        run: |
          terraform init -backend-config=aws.conf

      - name: Terraform Validate
        id: validate
        working-directory: ./infra
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        working-directory: ./infra
        run: |
          terraform apply --auto-approve
          DISTRIBUTION_ID=$(cat distribution_id.txt)
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
        env:
          TF_VAR_AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          TF_VAR_AWS_USER: ${{ vars.AWS_USER }}
          TF_VAR_SSL_CERT_ARN: ${{ vars.SSL_CERT_ARN }}
          TF_VAR_DOMAIN: ${{ vars.DOMAIN }}
          TF_VAR_S3_BUCKET: ${{ vars.S3_BUCKET }}
          TF_VAR_REGION: ${{ vars.AWS_REGION }}
          TF_VAR_API_DOMAIN: ${{ vars.API_DOMAIN }}

      - name: Create version file
        run: |
          echo "${{ github.sha }}" > ./dist/build_version.txt

      - name: Upload to S3
        run: |
          aws s3 sync ./dist s3://${{ vars.S3_BUCKET }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
          DISTRIBUTION_ID: ${{ steps.apply.outputs.distribution_id }}
